{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?a022","webpack:///./src/ui/index.vue?e0b9","webpack:///./src/App.vue?0058","webpack:///./src/ui/index.vue?4c9d","webpack:///./src/lib/validate.js","webpack:///./src/lib/console.js","webpack:///./src/lib/base.js","webpack:///./src/util/index.js","webpack:///./src/util/dom.js","webpack:///./src/lib/rectRange.js","webpack:///./src/lib/render-queue.js","webpack:///./src/util/range.js","webpack:///./src/lib/tabs.js","webpack:///./src/lib/node.js","webpack:///./src/lib/history.js","webpack:///./src/lib/version.js","webpack:///./src/util/computed.js","webpack:///./src/components/section.js","webpack:///./src/components/cursor.js","webpack:///./src/lib/events.js","webpack:///./src/components/unit.js","webpack:///./src/components/line.js","webpack:///./src/lib/keyCode.js","webpack:///./src/ui/text.vue?e4dc","webpack:///src/ui/text.vue","webpack:///./src/ui/text.vue?03d4","webpack:///./src/ui/text.vue","webpack:///./src/ui/image.vue?e669","webpack:///src/ui/image.vue","webpack:///./src/ui/image.vue?8cd3","webpack:///./src/ui/image.vue","webpack:///./src/ui/line.vue?6ca3","webpack:///src/ui/line.vue","webpack:///./src/ui/line.vue?f9be","webpack:///./src/ui/line.vue","webpack:///./src/ui/section.vue?6fe1","webpack:///src/ui/section.vue","webpack:///./src/ui/section.vue?d882","webpack:///./src/ui/section.vue","webpack:///./src/ui/ui.js","webpack:///./src/components/doc.js","webpack:///./src/index.js","webpack:///./src/ui/cursor.vue?7559","webpack:///src/ui/cursor.vue","webpack:///./src/ui/cursor.vue?55c1","webpack:///./src/ui/cursor.vue","webpack:///./src/ui/vessel.js","webpack:///src/ui/index.vue","webpack:///./src/ui/index.vue?c52b","webpack:///./src/ui/index.vue","webpack:///src/App.vue","webpack:///./src/App.vue?4c4f","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/ui/image.vue?839e","webpack:///./src/ui/text.vue?1bc8","webpack:///./src/ui/index.vue?14d4","webpack:///./src/ui/cursor.vue?50f6"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticStyle","_v","staticRenderFns","staticClass","directives","rawName","expression","_t","ref","doc","cursor","_l","section","guid","class","line","unit","type","Validate","Console","message","console","log","Base","options","_validate","_console","Math","random","toString","substring","getProperty","obj","Array","isArray","split","pop","vSplit","array","index","concat","isTextNode","node","nodeType","isElementNode","getComputedStyle","getTextNode","el","textNode","child","childNodes","loopNodes","callback","_while","textNodes","map","RectRange","startNode","endNode","startOffset","endOffset","endX","endElx","startX","startElx","offset","x","elx","range","constructor","area","include","nodes","nextSibling","L","nextLine","firstChild","renderQueue","lists","ticks","nextTicks","setStart","previousSibling","setEnd","renderObj","has","find","render","getRelation","NODE","undefined","implementCallback","locked","tick","f","warn","RenderQueue","getRange","document","createRange","tabs","Node","update","nodeName","__text__","style","parentNode","lastChild","_dirty","__el__","__wraping__","__offset__","__x__","__overed__","__visible__","areas","mountedList","renderList","__virtual__","__mounted","releaseTicks","setTimeout","_","__unit__","text","getText","flag","pnode","childs","idx","findIndex","isExit","_area","relation","textContent","Tabs","space","_this","level","fill","join","rs","prevParent","height","selectNodeContents","getBoundingClientRect","rect","bottom","top","newNode","referenceNode","_setParentNode","_solveSibling","_solveLastChild","_solveFirstChild","pushMount","appendChild","dnode","error","newChild","oldChild","History","msg","Error","Version","v","info","computedBounday","e","width","topOffset","y","bottomOffset","boundayIntimateDir","offsetMiddle","computedClientBoundaryByOffset","dom","dir","offsetWidth","boundary","computedRangeClientBoundary","nodeValue","_rect","breakWord","breaks","_break","Section","Line","cloneSection","cloneNode","emptyChildNodes","cloneLine","removeChild","isBlank","_node_","clone","cLine","_cline_","insertBefore","lineRect","clientWidth","breakword","complement","blank","getTextLength","isText","getAccordWithContentRect","rectRange","collapsed","queue","content_offset","__over__","appendUnits","over","isOverflow","max","nx","_units_","startInsertUnits","newLine","Cursor","left","_boundary","composition","input","oldInput","keyCode","focus","empty","emptyInput","closeComposition","unlock","replace","dymReg","RegExp","match","setCursor","setByBoundary","startContainer","__cursor__","fontSize","parseInt","isNaN","cursor_height","target","clientX","clientY","scrollTop","scrollLeft","docRect","abs","referenceLine","isSet","_cursor","Unit","diff","reset","set","EventEmitter","require","Events","params","_doc","_listener","listen","list","addEventListener","_callback","on","emit","comments","url","isRange","is_composition","remark","linespacing","group_id","_copy","isCarousel","filter","sceneSupport","updateRange","isImage","id","start","end","textLength","progress","sub","isLineFeed","modal","getFissionModal","substr","_offset","right","onRender","num","getNextSameNodeTypeNodes","nodeleft","noderight","removeNodes","cursorNode","S","units","scrollWidth","Units","overUnits","unshift","order","ContentRect","isAsc","prevContentRect","abountNodes","firstContentRect","_dir","exec","contentRect","prev","first","8","13","39","37","38","40","isComposition","_s","_e","props","default","created","component","isSelect","load","watch","methods","$nextTick","image","src","onload","onerror","UIs","register","Components","cp","Text","Image","Doc","config","history","events","version","contains","isPlaceholder","place","registered","init","section1","line1","unit1","unit2","unit4","unit5","unit3","line2","unit21","unit22","unit23","buildSections","drawRect","breakWord2","KeyCodeName","stopBreakWord","accord","getPreviousSameNodeTypeNode","D","placeholder","deleteText","insetSection","nextTick","setCursorAccordWithCursor","appendText","update_offset","breakwords","compositionupdate","compositioning","updateCompositionRange","compositionEnd","updateInput","keyDown","computed","mounted","$refs","getInput","$el","onMount","beforeDestroy","h","$slots","components","Vessel","uiCursor","Vue","productionTip","App","$mount"],"mappings":"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","file":"js/app.bf37d937.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=0f27e0dc&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"demo版本 换行出现问题，尝试刷新解决(移动端未做兼容)\")]),_c('doc',{staticStyle:{\"width\":\"340px\",\"height\":\"400px\",\"margin\":\"20px auto\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"jf-doc-wrapper\",attrs:{\"id\":\"jf-doc-wrapper\"}},[_c('div',{staticClass:\"jf-doc\",attrs:{\"id\":\"jf-doc\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_vm._t(\"default\")],2),_c('ui-cursor',{ref:\"cursor\",attrs:{\"cursor\":_vm.doc.cursor,\"doc\":_vm.doc}}),_vm._l((_vm.doc.childNodes),function(section){return _c('Vessel',{key:section.guid,class:[section.class],attrs:{\"unit\":section,\"type\":\"section\"}},_vm._l((section.childNodes),function(line){return _c('Vessel',{key:line.guid,attrs:{\"type\":\"line\",\"unit\":line}},_vm._l((line.childNodes),function(unit){return _c('Vessel',{key:unit.guid,attrs:{\"unit\":unit,\"type\":unit.type}})}),1)}),1)})],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class Validate {\n    constructor() {}\n}","export default class Console {\n    constructor() {}\n    error(msg) {\n        new Error(msg)\n    }\n    info(name, ...message) {\n        console.log('%c%s', 'background: green;color: white', name, ...message);\n    }\n    warn(name, ...message) {\n        console.log('%c%s', 'background: orange;color: white', name, ...message);\n    }\n    error(name, ...message) {\n        console.log('%c%s', 'background: red;color: white', name, ...message);\n    }\n}","import Validate from \"./validate\";\nimport Console from './console';\nexport default class Base {\n    constructor(options) {\n        // this.init(options)\n        this._validate = new Validate();\n        this._console = new Console();\n    }\n    init(options) {\n        for (let key in options) {\n            this[key] = options[key];\n        }\n\n    }\n}","function guid() {\n    return ((((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + \"-\" + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + \"-\" + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + \"-\" + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + \"-\" + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1));\n}\nfunction getProperty(obj, name) {\n    name = Array.isArray(name) ? [...name] : (name + '').split(\".\");\n    for (var i = 0; i < name.length - 1; i++) {\n        obj = obj[name[i]];\n        if (typeof obj !== \"object\" || !obj) return;\n    }\n    return obj[name.pop()];\n}\n\nfunction setProperty(obj, name, value) {\n    name = Array.isArray(name) ? [...name] : (name + '').split(\".\");\n    for (var i = 0; i < name.length - 1; i++) {\n        if (typeof (obj[name[i]]) !== \"object\" || !obj[name[i]]) obj[name[i]] = {};\n        obj = obj[name[i]];\n    }\n    obj[name.pop()] = value;\n}\n\nfunction isMobile() {\n    let isMobile = /Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent);\n    return isMobile;\n}\n// index 表示需要分割的index 左侧位置 \nfunction vSplit(array, index) {\n    if(Array.isArray(array)) {\n        array = [].concat([], array);\n    }\n    return [array.slice(0, index), array.slice(index)]\n}\n\n\nexport {\n    isMobile,\n    getProperty,\n    guid,\n    setProperty,\n    vSplit\n\n}","\n\n\n\nexport let isTextNode = (node) => {\n    return node.nodeType == 3;\n}\nexport let isElementNode = (node) => {\n    return node.nodeType == 1;\n}\n\nexport let getComputedStyle = (node) => {\n    if (isElementNode(node)) return window.getComputedStyle(node);\n    return {}\n}\n\n\nfunction arrIndexOf(arr,v){\n    for(var i=0;i<arr.length;i++){\n        if(arr[i] == v){\n            return i;\n        }\n    }\n    return -1;\n}\n\n\nexport function addClass(obj, className) {\n    //如果原来没有class\n    if (obj.className == '') {\n        obj.className = className;\n    } else {\n        //如果原来有class\n        var arrClassName = obj.className.split(' ');\n        var _index = arrIndexOf(arrClassName, className);\n        if (_index == -1) {\n            //如果要添加的class在原来的class中不存在\n            obj.className += ' ' + className;\n        }\n        //如果要添加的class在原来的class中存在\n    }\n}\nexport function removeClass(obj, className) {\n    //如果原来有class\n    if (obj.className != '') {\n        var arrClassName = obj.className.split(' ');\n        var _index = arrIndexOf(arrClassName, className);\n        //如果有我们要移除的class\n        if (_index != -1) {\n            arrClassName.splice(_index, 1);\n            obj.className = arrClassName.join(' ');\n        }\n    }\n\n}\n\n\n// export let isBlock\nexport let getTextNode = (el) => {\n    let textNode = null;\n    let child = el.childNodes;\n    for (let i = 0; i < child.length; i++) {\n        let node = child[i];\n        if (isTextNode(node)) {\n            textNode = node;\n            break;\n        }\n    }\n    return textNode;\n}\nexport let getTextNodes = (el) => {\n    let _while = (childNodes, textNodes = []) => {\n        if (childNodes && childNodes.length) {\n            [...childNodes].map(node => {\n                if (isTextNode(node)) {\n                    textNodes.push({\n                        node,\n\n                    });\n                } else {\n                    _while(node.childNodes, textNodes)\n                }\n            });\n            return textNodes;\n\n        } else {\n            return textNodes;\n        }\n\n    }\n\n    return _while(el.childNodes);\n}\n\n\nexport let loopNodes = (el, callback = () => {}) => {\n    let _while = (childNodes, textNodes = []) => {\n        if (childNodes && childNodes.length) {\n            [...childNodes].map(node => {\n                callback(node);\n                if(node.childNodes && node.childNodes.length) {\n                    _while(node.childNodes, textNodes)\n                } \n            });\n           \n        }\n\n    }\n    return _while(el.childNodes);\n}\n\nexport let getContainerNode = (textNode) => {\n    if (isTextNode(textNode)) {\n        return textNode.parentNode;\n    }\n    return textNode;\n    // return textNode;\n}\n\nexport let createElement = (parent, type, options) => {\n\n    let ele = document.createElement(type);\n    if (!parent) return ele;\n    parent.appendChild(ele);\n    return ele;\n}\n\nexport let getElememt = (node) => {\n    if (typeof node == 'string') {\n        return document.querySelector(node);\n    }\n    return node;\n\n}\n\nexport let getElememts = (node) => {\n    if (typeof node == 'string') {\n        return document.querySelectorAll(node);\n    }\n    return node;\n\n}\n\nexport let getScroll = (el) => {\n    let isoverFlow = false;\n\n    while (el && !isoverFlow) {\n        let elStyle = getComputedStyle(el);\n        isoverFlow = elStyle['overflow'] == 'auto' || elStyle['overflow-y'] == 'auto' || (el.style && el.style.overflow == 'auto');\n        if (!isoverFlow) {\n            el = el.parentNode;\n        }\n\n    }\n    return el || document.body;\n\n}\n// 边界判断\n\nexport let boundary = (scrollBox, el) => {\n\n    let { left, right, top, bottom, height } = scrollBox.getBoundingClientRect();\n    let { scrollTop, scrollLeft, } = scrollBox;\n    if (scrollBox.nodeName == 'BODY') {\n        bottom = document.body.clientHeight - document.body.scrollTop;\n    }\n    let elRect = el.getBoundingClientRect();\n    let elTop = elRect.top;\n    let elBottom = elRect.bottom;\n\n    let topDiff = elTop - top;\n    let bottomDiff = elBottom - bottom;\n    if (bottomDiff > 0) {\n        return {\n            bottom: bottomDiff,\n        }\n    }\n    return {\n\n    }\n}\n\n\n\n\n\n","import Base from './base';\n\nexport default class RectRange extends Base {\n    constructor(options) {\n        super(options);\n        this.startNode = null;\n        this.endNode = null;\n        this.startOffset = 0;\n        this.endOffset = 0;\n        this.endX = 0;\n        this.endElx = 0;\n        this.startX = 0;\n        this.startElx = 0;\n\n        super.init(options);\n    }\n    get collapsed() {\n        return this.startNode == this.endNode && this.startOffset == this.endOffset;\n    }\n    reset() {\n        this.startNode = null;\n        this.endNode = null;\n        this.startOffset = 0;\n        this.endOffset = 0;\n        this.endX = 0;\n        this.endElx = 0;\n        this.startX = 0;\n        this.startElx = 0;\n    }\n    setStart({\n        node,\n        offset,\n        x,\n        elx\n    }) {\n        this.startNode = node;\n        this.startOffset = offset;\n        this.startX = x;\n        this.startElx = elx;\n    }\n    setEnd({\n        node,\n        offset,\n        x,\n        elx\n    }) {\n        this.endNode = node;\n        this.endOffset = offset;\n        this.endX = x;\n        this.endElx = elx;\n    }\n    clone() {\n        let range = new this.constructor(this);\n\n        return range;\n    }\n    getRelation(area) {\n\n        if (area.startNode == this.startNode && area.endNode == this.endNode) {\n            if (area.startOffset == this.startOffset && area.endOffset == this.endOffset) {\n                return 'conincide'\n            }\n            if (area.startOffset >= this.startOffset && area.endOffset <= this.endOffset) {\n                return 'included'\n            }\n            if (area.startOffset <= this.startOffset && area.endOffset >= this.endOffset) {\n                return 'contain'\n            }\n            return 'overlap'\n        };\n        return 'difference'\n\n    }\n\n    getRange(callback = (node) => { }, include = true) {\n        let startNode = this.startNode;\n        let endNode = this.endNode;\n        let index = 0;\n        let nodes = [];\n        // let collapsed\n        // 如果在同一个节点\n        if (startNode == endNode && this.endOffset == 0) return [];\n        if (include) {\n            let node = callback(startNode, index, this);\n            if (node) nodes.push(node);\n        }\n        index++;\n        if (startNode == endNode) return nodes;\n        startNode = startNode.nextSibling;\n        while (startNode) {\n            // if (startNode == endNode && this.endOffset == 0) break;\n            if (!(startNode == endNode && !include)) {\n                let node = callback(startNode, index, this);\n                if (node) nodes.push(node);\n            }\n            index++;\n            if (startNode == endNode) break;\n            let L = startNode.L;\n            startNode = startNode.nextSibling;\n            // 切换到下一行\n            if (!startNode && L) {\n                startNode = L.nextLine ? L.nextLine.firstChild : null\n            }\n        };\n        return nodes;\n    }\n}","import Base from \"./base\";\nimport RectRange from \"./rectRange\";\nclass renderQueue extends Base {\n    constructor(options) {\n        super(options);\n        this.lists = [];\n        this.ticks = [];\n        this.nextTicks = [];\n        super.init(options);\n    }\n\n    push(node, type) {\n        let range = new RectRange();\n        range.setStart({ node: node.previousSibling });\n        range.setEnd({ node: node.nextSibling });\n        let renderObj = {\n            range,\n            node,\n            type\n        }\n        \n        if (type == 'text') {\n            this.lists.push(renderObj);\n            return;\n        }\n        let has = this.lists.find((render, index) => {\n            if (render.range.getRelation(renderObj.range) == 'conincide' && render.type!='text') {\n                this.lists.splice(index, 1)\n                return true;\n            }\n\n        });\n        if (!has) {\n            this.lists.push(renderObj);\n        }\n\n    }\n    releaseTicks(node) {\n        this.lists.find((render, index) => {\n            let NODE = render.node;\n            if (NODE == node) {\n                render.node = undefined;\n                this.lists.splice(index, 1);\n                return true;\n            };\n        });\n\n        // bug 跑完当前tick后 tick里面加入新tick， 但是当前tick会移除所有tick \n        if (this.lists.length == 0) {\n           this.implementCallback();\n        }\n\n\n    }\n\n    implementCallback() {\n    \n        this.locked = true;\n        this.ticks.map(tick => {\n            tick();\n        });\n        this.locked = false;\n        this.ticks = this.nextTicks;\n        this.nextTicks = [];\n\n    }\n    nextTick(f) {\n        if(this.locked) {\n            this.nextTicks.push(f);\n        }else {\n            this.ticks.push(f);\n        }\n       \n        if (this.lists.length == 0) {\n            this._console.warn('报告!!!')\n            this.implementCallback();\n           \n        }\n      \n    }\n}\n\n\nlet RenderQueue = new renderQueue();\n\nexport default RenderQueue;\n\n","let getRange = () => {\n    let range = document.createRange();\n    return range;\n}\n\nlet getSelection = (range) => {\n    const selection = window.getSelection();\n    return selection\n    // 添加光标选择的范围\n    // selection.addRange(range);\n};\nlet emptyRange = () => {\n    let body = document.getElementsByTagName(\"body\")[0];\n    const selection = window.getSelection();\n    selection.collapse(body, 0)\n}\n\nlet addRange = (range) => {\n    const selection = window.getSelection();\n    // 添加光标选择的范围\n    selection.addRange(range);\n};\n\n\nexport {\n    getSelection,\n    getRange,\n    addRange,\n    emptyRange\n}\n","let tabs = {\n    'space': '\\u00a0'\n}\n\nexport default tabs;","import Base from './base';\nimport {\n    guid,\n    getProperty\n} from '../util/index';\nimport {\n    getTextNode,\n    loopNodes\n} from \"@/util/dom\";\nimport renderQueue from './render-queue';\nimport {\n    getRange\n} from '@/util/range';\nimport Tabs from '@/lib/tabs.js';\nimport RectRange from './rectRange';\nexport default class Node extends Base {\n    constructor(options, update = false) {\n        super();\n        this.class = '';\n        this.nodeName = '';\n        this.__text__ = '';\n        // this.text = '';\n        this.style = '';\n        this.parentNode = null;\n        this.childNodes = [];\n        this.nextSibling = null;\n        this.previousSibling = null;\n        this.lastChild = null;\n        this.firstChild = null;\n        this._dirty = true;\n        // dom渲染的时候会进行绑定真实dom\n        this.__el__ = null;\n\n        // this.__virtual__ = true;\n\n        // 是否处于自动换行中\n        this.__wraping__ = false;\n        // 在__wraping__存在时发生，记录dom当前js换行的位置 具体见下面注释\n        this.__offset__ = undefined;\n        // 在__wraping__存在时发生，记录由于换行产生的差值 具体见下面注释\n        this.__x__ = undefined;\n        // 在__wraping__存在时发生，记录是文本超出还是进行补全 具体见下面注释\n        this.__overed__ = undefined;\n\n        //  @提案  在换行时如果发现节点存在__visible__标记 会获取其宽度后将其进行删除\n        this.__visible__ = undefined\n        \n\n        /**\n         * ||||||a|||\n         * ||||||\n         * a||| 为__overed__ 文本超出 将标记为true\n         * |||\n         * b||||||\n         * b|| 为进行补充 _overed__不会进行标记\n         * \n         * \n         * 原文本\n         * ||||||||||||||||||a|||||\n         * ||||||||||||||||||\n         * ||||||||||||||||||\n         * 换行推演如下 ()部分表示换行部分\n         * ||||||||||||||||||(a|||||)\n         * ||||||||||||||||||\n         * ||||||||||||||||||\n         * =>\n         * ||||||||||||||||||\n         * (a|||||)||||||||||||(||||||)\n         * ||||||||||||||||||\n         * =>\n         * ||||||||||||||||||\n         * (a|||||)||||||||||||\n         * (||||||)||||||||||||(||||||)\n         * =>\n         * ||||||||||||||||||\n         * (a|||||)||||||||||||\n         * (||||||)||||||||||||\n         * (||||||)||||||\n         * \n         * \n         * \n         * |||||口|\n         * \n         *假设a标记位置发生了换行(标记为__wraping__)，那么将该片段(该片段会继续绑定原始真实dom，并用__offset__记录截取位置)\n         补充到下一行并缓存a|||||片段的长度给下一行每个node作为__x__ 为方便下一行进行换行()\n        在完成换行后，所有标记将被移除\n         * \n         * \n         * \n         * \n         * \n         * \n         */\n        this.guid = guid();\n        this.areas = [];\n\n        this.mountedList = [];\n        this.renderList = [];\n\n        // this.render_id = guid();\n        super.init(options);\n        if (update) {\n            this.guid = guid();\n        }\n\n\n    }\n    // 是否处于虚拟节点阶段\n    get __virtual__() {\n        if (!this.__el__) return true;\n        if (this.__wraping__) return true;\n        return false;\n    }\n    get text() {\n\n        return this.__text__;\n    }\n\n    set text(value) {\n        this.__text__ = value;\n        let node = this;\n        if (!this.__virtual__) {\n\n            node.__mounted = () => {\n                renderQueue.releaseTicks(node);\n            }\n            renderQueue.push(node, 'text');\n        }\n        setTimeout(_ => {\n            node.__mounted && node.__mounted();\n        }, 0)\n\n\n    }\n\n    get D() {\n        let nodeType = this.nodeType;\n        if (nodeType == 'unit') {\n            return this.parentNode.parentNode.parentNode;\n        }\n        if (nodeType == 'line') {\n            return this.parentNode.parentNode;\n        }\n        if (nodeType == 'section') {\n            return this.parentNode;\n        }\n        if (nodeType == 'doc') {\n            return this;\n        }\n\n        return null;\n\n    }\n    get S() {\n        let nodeType = this.nodeType;\n        if (nodeType == 'unit') {\n            return this.parentNode.parentNode;\n        }\n        if (nodeType == 'line') {\n            return this.parentNode;\n        }\n        if (nodeType == 'section') {\n            return this;\n        }\n\n        return null;\n    }\n\n    get L() {\n        let nodeType = this.nodeType;\n        if (nodeType == 'unit') {\n            return this.parentNode;\n        }\n        if (nodeType == 'line') {\n            return this;\n        }\n        return null;\n\n    }\n\n    get U() {\n        let nodeType = this.nodeType;\n        if (nodeType != 'unit') {\n            return null;\n        }\n        return this;\n    }\n\n    mounted(c) {\n        this.mountedList.push(c);\n\n    }\n\n    onMount() {\n        this.__wraping__ = false;\n        this.__mounted && this.__mounted();\n        this.mountedList.map(callback => callback());\n        this.mountedList = [];\n    }\n    onRender(el) {\n        if (el) {\n            this.__el__ = el;\n            this.__el__.__unit__ = this;\n        }\n\n    }\n\n    pushMount(node) {\n        // let rectRange = new RectRange();\n        // rectRange.setStart({ node: node.})\n        // let renderObj = {\n        //     range\n        // }\n\n\n\n        if (node.parentNode && !node.parentNode.__virtual__) {\n            // 如果是虚拟节点则推入\n            if (node.__virtual__) {\n                node.__mounted = () => {\n                    renderQueue.releaseTicks(node);\n                }\n                renderQueue.push(node)\n            }\n\n        }\n    }\n\n\n    getText() {\n        return this.text;\n    }\n\n\n    get textContent() {\n        let text = this.getText();\n        loopNodes(this, (node) => {\n            text = text + node.getText();\n        });\n        return text;\n    }\n    _updateDirty(flag) {\n        this._dirty = flag;\n    }\n    _setParentNode(pnode) {\n        this.parentNode = pnode;\n    }\n    _setChildNodes(childs) {\n        this.childNodes = childs;\n    }\n    _solveSibling() {\n        if (!this.parentNode) return;\n        let {\n            childNodes\n        } = this.parentNode;\n        let idx = childNodes.findIndex(node => node == this);\n        this.nextSibling = childNodes[idx + 1];\n        this.previousSibling = childNodes[idx - 1];\n\n        if (this.nextSibling) {\n            this.nextSibling.previousSibling = this;\n        }\n        if (this.previousSibling) {\n            this.previousSibling.nextSibling = this;\n        }\n    }\n    _solveLastChild() {\n        this.lastChild = this.childNodes[this.childNodes.length - 1];\n    }\n    _solveFirstChild() {\n        this.firstChild = this.childNodes[0];\n\n    }\n\n\n\n    addArea(area) {\n        let isExit = this.areas.find(_area => {\n            let relation = _area.getRelation(area);\n            if (relation == 'coincide') return true;\n        });\n        if (!isExit) {\n            this.areas.push(area);\n        }\n    }\n    removeArea(area) {\n        let index = this.areas.findIndex(_area => _area == area);\n        this.splice(index, 1);\n    }\n\n\n\n\n    isPlaceholder() {\n        return this.textContent == Tabs.space;\n    }\n    isBlank() {\n\n        return this.textContent == '';\n    }\n\n\n\n    /**\n     * \n     * \n     * \n     * ||||||||||||\n     * \n     */\n\n    getPreviousSameNodeTypeNode() {\n        let _this = this;\n        let node = _this.previousSibling;\n\n        if (node) return node;\n        let level = 0;\n        while (node = _this.parentNode) {\n            level++;\n            if (!node.previousSibling) {\n                _this = node;\n                // node = _parent.parentNode;\n            } else {\n\n                return getProperty(node.previousSibling, new Array(level).fill('lastChild').join('.'))\n            }\n        }\n        return null;\n\n\n        // let prevParent = node.parentNode.previousSibling;\n\n        // while(!prevParent && node.parentNode) {\n        //     node = node.parentNode;\n        //     prevParent = node.parentNode\n\n\n        // }\n        // if (prevParent) {\n        //     node = prevParent.lastChild;\n        // } \n\n\n\n    }\n    // 获取range内容的宽高\n    getRangeRect(area) {\n\n    }\n\n\n\n\n    // 搜索节点之前所有nodetype一样的node\n    getPreviousSameNodeTypeNodes(callback = () => { }) {\n        let _this = this;\n        let node = _this.previousSibling;\n        while (node) {\n            let rs = callback(node);\n            if (rs == 'break') {\n                break;\n            }\n            let parentNode = node.parentNode;\n            node = node.previousSibling;\n            if (!node) {\n                let prevParent = parentNode.previousSibling;\n                if (prevParent) {\n                    node = prevParent.lastChild;\n                }\n            }\n        }\n    }\n\n    getNextSameNodeTypeNodes(callback = () => { }) {\n        let _this = this;\n        let node = _this.nextSibling;\n        while (node) {\n            let rs = callback(node);\n            if (rs == 'break') {\n                break;\n            }\n            let parentNode = node.parentNode;\n            node = node.nextSibling;\n            if (!node) {\n                let prevParent = parentNode.nextSibling;\n                if (prevParent) {\n                    node = prevParent.firstChild;\n                }\n            }\n        }\n    }\n    getNextNodes(callback = () => { }) {\n        let _this = this;\n        let node = _this.nextSibling;\n        while (node) {\n            callback(node);\n            node = node.nextSibling;\n        }\n    }\n    getPreviousNodes(callback = () => { }) {\n        let _this = this;\n        let node = _this.previousSibling;\n        while (node) {\n            callback(node);\n            node = node.previousSibling;\n        }\n    }\n\n    getTextNodeHeight(node) {\n        let textNode = getTextNode(node);\n        let height = 0;\n        let range = getRange();\n        range.selectNodeContents(textNode);\n        if (range.getBoundingClientRect) {\n            var rect = range.getBoundingClientRect();\n            if (rect) {\n                height = rect.bottom - rect.top;\n            }\n        }\n        return height;\n    };\n\n    emptyChildNodes() {\n        this.childNodes = [];\n        this.firstChild = null;\n        this.lastChild = null;\n        return this;\n    }\n\n    cloneNode() {\n        let node = new this.constructor(this, true);\n        node.guid = guid();\n        // node.__virtual__ = true;\n        node.__el__ = null;\n        return node;\n    }\n\n\n\n\n    insertBefore(newNode, referenceNode) {\n        let idx = this.childNodes.findIndex(node => node == referenceNode);\n        newNode._setParentNode(this)\n        this.childNodes.splice(idx, 0, newNode);\n        referenceNode._solveSibling();\n        newNode._solveSibling();\n        this._solveLastChild();\n        this._solveFirstChild();\n        this.pushMount(newNode);\n\n        return newNode;\n    }\n\n\n    appendChild(node) {\n        node._setParentNode(this);\n        this.childNodes.push(node);\n        node._solveSibling();\n        this._solveLastChild();\n        this._solveFirstChild();\n\n        this.pushMount(node);\n        return node;\n    }\n    appendChilds(nodes) {\n        nodes.map(node => {\n            this.appendChild(node);\n        });\n        return this;\n    }\n    removeChild(dnode) {\n        let idx = this.childNodes.findIndex(node => node == dnode);\n        if (idx > -1) {\n            let node = this.childNodes.splice(idx, 1);\n            let previousSibling = dnode.previousSibling;\n            let nextSibling = dnode.nextSibling;\n            if (previousSibling) {\n                // pr\n                previousSibling._solveSibling();\n            }\n            if (nextSibling) {\n                nextSibling._solveSibling();\n            }\n            this._solveLastChild();\n            this._solveFirstChild();\n            this.pushMount(dnode);\n            setTimeout(() => {\n                dnode.__mounted && dnode.__mounted();\n            }, 0);\n            return dnode;\n        }\n        this._console.error('不存在该节点');\n    }\n\n    replaceChild(newChild, oldChild) {\n        let idx = this.childNodes.findIndex(node => node == oldChild);\n        newChild._setParentNode(this);\n        if (idx > -1) {\n            let node = this.childNodes.splice(idx, 1);\n            this.childNodes.splice(idx, 0, newChild);\n            newChild._solveSibling();\n            this._solveLastChild();\n            this._solveFirstChild();\n            this.pushMount(newChild);\n            return oldChild;\n        }\n        this._console.error('不存在该节点');\n    }\n\n\n\n\n\n}","export default class History {\n    constructor() {}\n    error(msg) {\n        new Error(msg)\n    }\n}","import Base from \"./base\";\n\nexport default class Version extends Base{\n    constructor() {\n        super();\n        this.v = '1.0.0';\n        this.name = 'JF-DOC'\n        this._console.info(`${this.name} ${this.v}`)\n        \n    }\n   \n}","import { getRange } from './range';\nimport { getTextNode, isTextNode, getTextNodes } from './dom';\nimport { vSplit } from './index';\n\n\nexport let computedBounday = (rect, e) => {\n    let startOffset = rect.x;\n    let endOffset = rect.width + startOffset;\n    let topOffset = rect.y;\n    let bottomOffset = topOffset + rect.height;\n    if (e.x >= startOffset && e.x <= endOffset && e.y >= topOffset && e.y <= bottomOffset) {\n        return true;\n    } else {\n        return false;\n    }\n}\nexport let boundayIntimateDir = (rect, e) => {\n    let startOffset = rect.x;\n    let offsetMiddle = startOffset + (rect.width / 2);\n    if (e.x < offsetMiddle) return 'left';\n    return 'right';\n}\n\n\nexport let getRectNodePos = (textNode, pos) => {\n    let range = getRange();\n    range.setStart(textNode, pos[0]);\n    range.setEnd(textNode, pos[1]);\n    let rect = range.getBoundingClientRect();\n    return rect;\n}\nexport let computedLineFeed = (line, callback = () => { }) => {\n    console.time('st')\n    let range = getRange();\n    let textNodes = getTextNodes(line);\n    let LineNumber = 0;\n    let Lines = [textNodes];\n    let base = null;\n    let isLineFeed = (compare) => {\n        if (!base) return false;\n        return compare.rect.left < base.rect.left;\n    }\n    let cut = (cutIdx, textIdx, compare, originTextIdx) => {\n        let _cutIdx = cutIdx;\n        let currentLine = Lines[LineNumber];\n        if (base.node != compare.node) {\n        } else {\n            let [current, cut] = vSplit(base.node.nodeValue, textIdx);\n            let cloneNode = base.node.cloneNode(base.node);\n            let baseClone = base.node.cloneNode(base.node);\n            baseClone.nodeValue = current;\n            currentLine[cutIdx].node = baseClone;\n            cloneNode.nodeValue = cut;\n            cloneNode.textContent = cut;\n            cloneNode.innerText = cut;\n            currentLine.splice(cutIdx + 1, 0, { node: base.node, start: textIdx, copyNode: cloneNode });\n            cutIdx++;\n        }\n        let [current, cut] = vSplit(currentLine, cutIdx);\n        Lines[LineNumber] = current;\n        Lines.push(cut);\n        callback(_cutIdx, originTextIdx, base, compare, textIdx);\n        base = null;\n        LineNumber++;\n    }\n    let SingleLineActuator = (Line) => {\n        let end = false;\n        Line.find(({ node, start, copyNode }, index) => {\n\n            if (end) return true;\n            let value = node.nodeValue;\n            let originStart = start || 0;\n            start = start == undefined ? 0 : start;\n            for (let i = start; i < value.length; i++) {\n                range.setStart(node, i);\n                range.setEnd(node, i + 1);\n\n                let rect = range.getBoundingClientRect();\n                let _isLf = isLineFeed({ rect, node });\n                // 是否换行\n                if (_isLf && base) {\n                    cut(index, i, { rect, node }, i - originStart);\n                    end = true;\n                    SingleLineActuator(Lines[LineNumber])\n\n                    return true;\n                    break;\n                }\n\n                base = {\n                    rect,\n                    node\n                };\n            }\n        })\n    }\n    SingleLineActuator(Lines[LineNumber]);\n    console.timeEnd('st')\n    return Lines;\n}\n\n\n\n\n/**\n * \n * @param {*} line \n * @param {*} callback \n * \n * ||||||||||||||||||||||a||||||||||||||a||||||||||||||\n * \n * \n * ||||||||||||||||||\n * |||a|||||||||||||a\n * ||||||||||||||||||\n * \n * \n */\nexport let computedLineFeed2 = (line, callback = () => { }) => {\n    // let Line\n\n}\n\n\nexport let computedClientBoundaryByOffset = (dom, offset, dir = 'right', range) => {\n    let textNode = getTextNode(dom);\n    range = range || getRange();\n    if (!textNode || !textNode.textContent.length) {\n        let node = dom;\n        let rect = node.getBoundingClientRect();\n        range.setStart(node, 0);\n        console.log('0000', window.getComputedStyle(node).width, node.offsetWidth)\n        return {\n            dir,\n            offset,\n            range,\n            rect: {\n                y: rect.y,\n                x: offset == 0 ? rect.x : rect.x + rect.width,\n                height: rect.height\n            }\n        }\n    }\n\n    range.setStart(textNode, offset);\n    range.setEnd(textNode, offset);\n\n\n    let rect = range.getBoundingClientRect();\n    let boundary = {\n        dir,\n        offset: offset,\n        textNode,\n        range,\n        rect: {\n            y: rect.y,\n            x: rect.x,\n            height: rect.height\n        }\n\n    };\n    return boundary;\n}\n\n\nexport let computedRangeClientBoundary = (e, textNode) => {\n    let range = getRange();\n    let value = textNode.nodeValue;\n    let boundary = {};\n    range.setStart(textNode, 0);\n    range.setEnd(textNode, value.length);\n    let rect = range.getBoundingClientRect();\n    if (!computedBounday(rect, e)) {\n        let dir = boundayIntimateDir(rect, e);\n        boundary = {\n            dir,\n            offset: dir == 'left' ? 0 : value.length,\n            textNode,\n            range,\n            rect: {\n                y: rect.y,\n                x: dir == 'left' ? rect.x : rect.x + rect.width,\n                height: rect.height,\n                _rect: rect\n            },\n        };\n        return boundary;\n    }\n    for (let i = 0; i < value.length; i++) {\n        range.setStart(textNode, i);\n        range.setEnd(textNode, i + 1);\n        let rect = range.getBoundingClientRect();\n        if (computedBounday(rect, e)) {\n            let dir = boundayIntimateDir(rect, e);\n            boundary = {\n                dir,\n                offset: dir == 'left' ? i : i + 1,\n                textNode,\n                range,\n                rect: {\n                    y: rect.y,\n                    x: dir == 'left' ? rect.x : rect.x + rect.width,\n                    height: rect.height,\n                    _rect: rect\n                }\n\n            };\n            break;\n        }\n    }\n    return boundary;\n}\n\n// export ","import Node from '@/lib/node';\nimport {\n    getRange\n} from '@/util/range';\nimport {\n    computedClientBoundaryByOffset\n} from '@/util/computed';\nimport Base from '../lib/base';\nimport Tabs from '@/lib/tabs.js';\n\nclass breakWord extends Base {\n    constructor(options) {\n        super(options);\n        this.breaks = [];\n        // overflow / blank\n        this.type = '';\n        super.init(options);\n    }\n    push(_break) {\n        this.breaks.push(_break);\n    }\n\n}\nexport default class Section extends Node {\n    constructor(options, update) {\n        // super(params);\n        super(options, update);\n        this.nodeType = 'section';\n        this.class = 'jf-section';\n        super.init(options);\n    }\n\n    // 对指定进行文本替换\n    replaceText(area) {\n        let text = this.textContent;\n        let startNode = area.startNode;\n        let endNode = area.endNode;\n        // startNode.parentNode.removeChild(startNode);\n    }\n\n    insetLine() {\n\n    }\n    // 在光标指定段落下插入一个段落 并将光标所在段落(该段落的文本)以后的文本剪切到新段落\n    insetSection(cursor) {\n        let {\n            offset,\n            node\n        } = cursor;\n        let Line = node.parentNode;\n        let cloneSection = this.cloneNode();\n        cloneSection.emptyChildNodes();\n        let doc = this.parentNode;\n        let cloneLine = Line.cloneNode();\n        cloneLine.emptyChildNodes();\n        if (offset == 0) {\n            Line.removeChild(node);\n            let cloneNode = node.cloneNode();\n            cloneNode.guid = node.guid;\n            cloneLine.appendChild(cloneNode);\n\n        } else {\n            // 切割光标所在位置文本\n            let text = node.text;\n            node.text = text.slice(0, offset);\n            let cloneNode = node.cloneNode();\n            cloneNode.guid = node.guid;\n            cloneNode.text = text.slice(offset);\n            if (!cloneNode.isBlank()) {\n                cloneLine.appendChild(cloneNode);\n            }\n            // node = cloneNode;\n\n        }\n        node = node.nextSibling;\n        while (!!node) {\n            let _node_ = node;\n            node = node.nextSibling;\n            Line.removeChild(_node_);\n            cloneLine.appendChild(_node_.cloneNode());\n        }\n        if (cloneLine.isBlank() && !this.nextSibling) {\n            // cloneLine.childNodes[0].text = Tabs.space;\n            let clone = cursor.node.cloneNode();\n            clone.text = Tabs.space;\n            cloneLine.appendChild(clone)\n        }\n        if (Line.isBlank()) {\n\n            let clone = cursor.node.cloneNode();\n            clone.text = Tabs.space;\n            Line.appendChild(clone)\n        }\n        if (cloneLine.childNodes.length) {\n            cloneSection.appendChild(cloneLine);\n        }\n\n        let cLine = Line.nextSibling;\n        while (!!cLine) {\n            let _cline_ = cLine;\n            cLine = cLine.nextSibling;\n            this.removeChild(_cline_);\n            cloneSection.appendChild(_cline_);\n        }\n        if (!this.nextSibling) {\n            doc.appendChild(cloneSection);\n        } else {\n            doc.insertBefore(cloneSection, this.nextSibling);\n        }\n\n        return cloneLine;\n\n\n\n\n\n\n\n\n        // let \n\n\n    }\n    breakWord2(cursor) {\n        let range = getRange();\n        let node = cursor ? cursor.node : this.childNodes[0].childNodes[0];\n        let Line = node.parentNode;\n       \n        let lineRect = Line.__el__.getBoundingClientRect();\n        let clientWidth = Line.__el__.clientWidth;\n        let Section = Line.parentNode;\n        let breakword = new breakWord();\n        let renderQueue = [];\n        let complement = () => {\n            let isBlank = true;\n            breakword.type = 'blank'\n            let blank = 0;\n            let complement = 0;\n            this._console.info('====正在complement====')\n            while (isBlank && Line) {\n                let nextLine = Line.nextSibling;\n                if (nextLine) {\n                    let lastChild = Line.lastChild;\n                    let offset = lastChild ? lastChild.getTextLength() + (lastChild.__offset__ || 0) : 0;\n                    let {\n                        rect\n                    } = computedClientBoundaryByOffset(lastChild.__el__, lastChild.isText() ? offset : 1, 'left', range);\n                    blank = clientWidth - (rect.x - complement - lineRect.x);\n\n                    nextLine.getAccordWithContentRect(({\n                        x,\n                    }) => {\n                        if (x > blank) {\n\n                            return true;\n                        }\n                    });\n\n                    complement = nextLine.rectRange.endX - nextLine.rectRange.startX;\n\n                    if (nextLine.rectRange.collapsed) {\n                        isBlank = false;\n                        renderQueue.map(queue => queue());\n                        break;\n                    };\n                    // breakword.push(prev);\n                    let content_offset = nextLine.rectRange.endOffset;\n                    let nodes = nextLine.rectRange.getRange((node, index, range) => {\n                        if(range.endOffset == 0 && range.endNode == node) return null;\n                        node.__wraping__ = true;\n                        if (!node.isText()) {\n                            let clone = node.cloneNode();\n                            clone.guid = node.guid;\n                            node.__wraping__ = false;\n                            \n                            clone.__el__ = node.__el__;\n                            nextLine.removeChild(node);\n                            clone.__x__ = complement;\n                            renderQueue.push(_ => {\n                                clone.__x__ = undefined;\n                                clone.__el__.__over__ = undefined;\n                                clone.__offset__ = undefined;\n                            })\n                            return clone;\n\n                        }\n                        // 表示进行补充的node需要进行字符串切割\n                        /**\n                         * <span>||||||</span>\n                         * <span>a|||||||||</span>\n                         * a||| 为 a|||||||||的一部分，无需直接删除，而是进行节点切割\n                         */\n                        if (node == nextLine.rectRange.endNode) {\n                            if (content_offset == node.getTextLength()) {\n                                nextLine.removeChild(node);\n                                node.__x__ = complement;\n                                renderQueue.push(_ => {\n                                    node.__el__.__over__ = undefined;\n                                    node.__x__ = undefined;\n                                    node.__offset__ = undefined;\n                                })\n                                return node;\n                            } else {\n                                let text = node.text;\n                                node.text = text.slice(content_offset);\n                                node.__wraping__ = false;\n                                if (node.isBlank()) {\n                                    nextLine.removeChild(node);\n                                }\n                                let clone = node.cloneNode();\n                                clone.guid = node.guid;\n                                clone.text = text.slice(0, content_offset);\n                                clone.__el__ = node.__el__;\n                                clone.__x__ = complement;\n                                node.__offset__ = node.__offset__ ? node.__offset__ + content_offset : content_offset;\n\n                                renderQueue.push(_ => {\n                                    node.__el__.__over__ = undefined;\n                                    clone.__x__ = undefined;\n                                    node.__offset__ = undefined;\n                                })\n                                return clone;\n                            }\n                        } else {\n                            nextLine.removeChild(node);\n                            node.__x__ = complement;\n                            renderQueue.push(_ => {\n                                node.__x__ = undefined;\n                            })\n                            return node;\n                        }\n                    });\n                    if (!nextLine.childNodes.length) {\n                        Section.removeChild(nextLine);\n                    }\n                    Line.appendUnits(nodes);\n                    Line = Line.nextSibling;\n                    if (!Line) {\n                        renderQueue.map(queue => queue());\n                    }\n\n\n                } else {\n                    isBlank = false;\n                    over();\n                }\n            }\n            return breakword;\n        }\n\n        let over = () => {\n            breakword.type = 'overflow';\n            let isOverflow = true;\n            let max = 0;\n            while (isOverflow) {\n                this._console.info('====正在overflow====1')\n                if (max > 100) break;\n                let nextLine = Line.nextSibling;\n\n                (Line).getAccordWithContentRect(({\n                    x,\n                }) => {\n                    if (x <= clientWidth) {\n                        return true;\n                    }\n                }, 'desc');\n\n                if (Line.rectRange.collapsed) {\n                    isOverflow = false;\n                    break;\n                }\n                breakword.push(Line.rectRange.clone());\n                let content_offset = Line.rectRange.startOffset;\n                let nodes = Line.rectRange.getRange((node, index, range) => {\n\n                    if(range.endOffset == 0 && range.endNode == node) return null;\n                    node.__wraping__ = true;\n                    let __x__ = node.__overed__ ? (Line.rectRange.endElx - Line.rectRange.startElx) : -Line.rectRange.startElx;\n                    if (node.__x__ && node.__overed__) {\n                        __x__ = node.__x__ - Line.rectRange.startX\n                    }\n                    __x__ = __x__ || 0;\n\n                    if (!node.isText()) {\n                        let clone = node.cloneNode();\n                        clone.guid = node.guid;\n                        Line.removeChild(node);\n                        clone.__x__ = __x__;\n                        clone.__el__ = node.__el__;\n                        \n                        renderQueue.push(() => {\n                            clone.__x__ = undefined;\n                            clone.__overed__ = undefined;\n                            clone.__offset__ = undefined;\n                        });\n                        node.__wraping__ = false;\n                        return clone;\n                    }\n\n                    if (node == Line.rectRange.startNode) {\n                        // 如果整个node发生over\n                        if (Line.rectRange.startOffset == 0) {\n                            Line.removeChild(node);\n                            node.__x__ = __x__;\n                            renderQueue.push(() => {\n                                node.__x__ = undefined;\n                            });\n                            return node;\n                        } else {\n                            let text = node.text;\n                            node.text = text.slice(0, content_offset);\n                            node.__wraping__ = false;\n                            if (node.isBlank()) {\n                                Line.removeChild(node);\n                            }\n                            let clone = node.cloneNode();\n                            clone.guid = node.guid;\n                            clone.__el__ = node.__el__;\n                            clone.text = text.slice(content_offset);\n                            renderQueue.push(() => {\n                                clone.__x__ = undefined;\n                                clone.__offset__ = undefined;\n                                clone.__overed__ = undefined;\n                            });\n                            clone.__offset__ = clone.__offset__ ? clone.__offset__ + content_offset : content_offset;\n\n                            clone.__x__ = __x__;\n                            return clone;\n                        }\n                    } else {\n                        Line.removeChild(node);\n                        node.__x__ = __x__;\n                        renderQueue.push(() => {\n                            node.__x__ = undefined;\n\n                        });\n                        return node;\n                    }\n                });\n                if (!nextLine) {\n                    let newLine = Line.cloneNode();\n                    newLine.emptyChildNodes();\n                    newLine.__el__ = Line.__el__;\n\n                    let _units_ = newLine.startInsertUnits(nodes);\n                    _units_.map(node => {\n                        renderQueue.push(() => {\n\n                            node.__offset__ = undefined;\n                        })\n                    })\n                    Section.appendChild(newLine);\n                    nextLine = newLine;\n                } else {\n                    nextLine.childNodes.map(node => {\n                        let nx = node.__x__ || 0;\n                        node.__x__ = (Line.rectRange.endX - Line.rectRange.startX) + nx;\n                        node.__overed__ = 1;\n                        renderQueue.push(() => {\n                            node.__overed__ = undefined;\n                            node.__x__ = undefined;\n                        });\n                    });\n                    let _units_ = nextLine.startInsertUnits(nodes);\n                    _units_.map(node => {\n                        renderQueue.push(() => {\n                            node.__offset__ = undefined;\n                        })\n                    })\n                }\n                Line = nextLine;\n                this._console.info('====overflow结束====1')\n                max++;\n            }\n            renderQueue.map(queue => queue());\n            return breakword;\n        }\n        if (!Line.isOverflow()) {\n            return complement()\n        } else {\n            return over();\n\n        }\n\n    }\n\n\n\n\n\n}","\nimport Base from '@/lib/base';\nimport { computedRangeClientBoundary, computedClientBoundaryByOffset } from \"@/util/computed\";\nimport { getTextNode, getComputedStyle, getScroll, isTextNode } from \"@/util/dom\";\nimport Tabs from '@/lib/tabs.js';\nimport {\n    getRange\n} from '@/util/range';\n\nexport default class Cursor extends Base {\n    constructor(doc) {\n        super();\n        this.offset = -1;\n        this.left = undefined;\n        this.top = undefined;\n        this.height = undefined;\n        this.width = 2;\n        this._boundary = null;\n        this.dom = null;\n        this.node = null;\n        this.composition = '';\n        this.input = '';\n        this.oldInput = '';\n        this.keyCode = '';\n        // 当锁的时候，update/set/setCuror将无效\n        this.locked = false;\n        // 绑定的dom\n        this.__el__ = null;\n        this.doc = doc;\n    }\n    focus() {\n        this.__el__ && this.__el__.focus();\n    }\n    reset() {\n        this.empty();\n        this.emptyInput();\n        this.closeComposition();\n    }\n    empty() {\n        this._boundary = null;\n        this.height = 30;\n        this.offset = -1;\n        this.left = undefined;\n        this.top = undefined;\n        this.dom = null;\n        this.node = null;\n        console.log(this.node, 'node---')\n        // this.composition = '';\n        this.input = '';\n        this.oldInput = '';\n        \n\n    }\n    closeComposition() {\n        this.unlock();\n        this.composition = '';\n        this.emptyInput();\n\n    }\n    emptyInput() {\n        if (this.__el__) {\n            this.__el__.value = '';\n        }\n        this.oldInput = '';\n        this.input = '';\n    }\n    updateInput(value) {\n        if (!this.composition) {\n            value = value.replace(/\\s/g, Tabs.space)\n        }\n        let oldInput = this.oldInput;\n        if (value.length > oldInput.length) {\n            oldInput = oldInput.replace(/\\\\/g, '\\\\\\\\')\n            let dymReg = new RegExp(`${oldInput}(.*)`);\n            let rs = value.match(dymReg);\n            if (rs) {\n                this.input = rs[1]\n            }\n        }\n        this.oldInput = value;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    setNode(node) {\n        this.node = node;\n    }\n\n    update(offset = undefined) {\n        if(this.locked) return;\n        if (typeof offset == 'number') {\n            // let textNode = getTextNode(this.dom);\n            \n            this._boundary = computedClientBoundaryByOffset(this.dom, offset);\n        }\n        this.setCursor(this._boundary);\n    }\n    set(dom, offset) {\n        \n        if(this.locked) return;\n        this.empty();\n        this.offset = offset;\n       \n        let boundary = computedClientBoundaryByOffset(dom, offset);\n        this.setByBoundary(boundary);\n        // this.__el__.focus();\n        this.__el__.focus();\n    }\n\n\n    setByBoundary(boundary) {\n        let { range } = boundary;\n        if (range) {\n            \n            this.dom = isTextNode(range.startContainer) ? range.startContainer.parentNode : range.startContainer;\n            this.node = this.dom.__unit__;\n            this.node.__cursor__ = this;\n\n            this._boundary = boundary;\n\n            let style = getComputedStyle(this.dom);\n            let fontSize = parseInt(style.fontSize);\n            fontSize = isNaN(fontSize) ? undefined : fontSize;\n            let { height } = boundary.rect;\n            let cursor_height = fontSize && this.node.isText() ? fontSize * (1.2) : height;\n            this.height = cursor_height;\n            this.setCursor(boundary);\n        }\n    }\n\n\n   \n\n    place(e) {\n        this.unlock();\n        if (this.__el__) {\n            this.__el__.value = '';\n        }\n        this.emptyInput();\n        this.empty();\n        let textNode = getTextNode(e.target);\n        let boundary = computedRangeClientBoundary(\n            {\n                x: e.clientX,\n                y: e.clientY,\n            },\n            textNode\n        );\n        this.setByBoundary(boundary);\n        this.__el__.focus();\n\n\n\n    }\n\n\n    setCursor(boundary) {\n        if(this.locked) return;\n        if(!boundary) return;\n        if (!boundary.range) return;\n        // this.emptyInput();\n        let { x, y, height } = boundary.rect;\n        let scrollTop = this.doc.__el__.scrollTop || 0;\n        let scrollLeft = this.doc.__el__.scrollLeft || 0;\n        let docRect = this.doc.rect;\n        let top = -Math.abs(height - this.height) / 2 + y + scrollTop;\n        this.left = x + scrollLeft - docRect.left;\n        this.top = top - docRect.top;\n        this.offset = boundary.offset;\n        \n\n\n\n    }\n\n    setCursorAccordWithCursor(cursor, referenceLine) {\n       \n        let range = getRange();\n        let scrollLeft = this.doc.__el__.scrollLeft || 0;\n        let isSet = false;\n        let _cursor = null;\n        referenceLine.childNodes.find(Unit => {\n            if(isSet) return true;\n            for(let offset = 0; offset <= Unit.getTextLength(); offset++) {\n               \n                // let textNode = getTextNode(Unit.__el__);\n                let {\n                    rect\n                } = computedClientBoundaryByOffset(Unit.__el__, offset, 'right', range);\n                let x = rect.x + scrollLeft;\n\n                if(x >= cursor.left) {\n                    isSet = true;\n\n                    if(_cursor && (_cursor.diff < x - cursor.left)) {\n                        offset = offset - 1 < 0 ? 0 : offset - 1\n                    }\n                    this.reset();\n                    this.set(Unit.__el__, offset)\n                    break;\n                }\n                _cursor = {\n                    x,\n                    unit: Unit,\n                    offset,\n                    diff: Math.abs(x-cursor.left)\n                }\n            }\n            // computedClientBoundaryByOffset(Unit.)\n        })\n        if(!isSet) {\n            let lastChild = referenceLine.lastChild;\n            this.reset();\n            this.set(lastChild.__el__, lastChild.getTextLength());\n        }\n        \n       \n    }  \n\n\n\n\n}","\nimport Base from '@/lib/base';\nvar EventEmitter = require('events')\n\n// import { guid } from '../util/index';\nexport default class Events extends Base {\n    constructor(doc, params) {\n        super(params);\n        this._doc = doc;\n        this._listener = [];\n        this.e = EventEmitter;\n        \n    }\n    \n\n    on(dom, name, callback) {\n        if(typeof dom == 'object') {\n            let listen = this._listener.find(listen => listen.dom == dom);\n            if(!listen) {\n                listen = {\n                    dom,\n                    list: []\n                };\n                this._listener.push(listen);\n            }\n            listen.list.push(callback)\n            dom.addEventListener(name, callback);\n        }else {\n            let _callback = name;\n            callback = _callback;\n            name = dom;\n            EventEmitter.on(name, callback)\n        }\n    }\n    emit(name, value) {\n        EventEmitter.emit(name, value);\n    }\n\n\n\n    \n}","import Node from '../lib/node.js';\nimport {\n    guid,\n    vSplit\n} from '../util/index';\n\nimport Tabs from '@/lib/tabs.js';\nimport RectRange from '../lib/rectRange.js';\nimport {\n    getRange\n} from '@/util/range';\nimport {\n    computedClientBoundaryByOffset\n} from '@/util/computed';\n// import DocStyle from './doc-style';\nexport default class Unit extends Node {\n    constructor(options = {}, update) {\n        super(options, update);\n\n        this.nodeType = 'unit';\n        this.class = \"jf-unit\";\n        // 评论数组\n        this.comments = [...(options.comments || [])];\n        // 文本\n        this.text = '';\n        // 图片地址\n        this.url = options.url;\n        this.isRange = options.isRange;\n        // 类型  text composition表示输入法类型\n        this.type = options.type || 'text';\n        this.range = null;\n        // composition表示正在输入法\n        this.is_composition = false;\n        // 标记 delete \n        this.remark = options.remark || '';\n        this.linespacing = options.linespacing || ''\n\n\n        // 标注选中时切割的textUnit隶属同一group_id\n        this.group_id = options.group_id;\n        // 光标，在Cursor产生后会被挂载\n        this.__cursor__ = null;\n        // this.docStyle = new DocStyle(options.docStyle || {});\n        this._copy = [];\n\n        super.init(options, update);\n        if (!this.isCarousel()) {\n            this.comments = this.comments.filter(_ => _);\n        }\n        // 场景支持\n        this.sceneSupport = [];\n        if (this.isText()) {\n            this.sceneSupport = ['comment', 'update-text'];\n        }\n        if (this.isCarousel()) {\n            this.sceneSupport = ['comment'];\n        }\n        this.updateRange();\n\n\n\n    }\n\n\n    isLineFeed() {\n        return this.text == '\\n'\n    }\n    isText() {\n        return this.type == 'text';\n    }\n    isComposition() {\n        return this.is_composition && this.isText();\n    }\n    isImage() {\n        return this.type == 'image';\n    }\n    isCarousel() {\n        return this.type == 'carousel'\n    }\n    isBlank() {\n        if (this.isImage()) return false;\n        return this.text == '';\n    }\n    isPlaceholder() {\n        return this.text == Tabs.space;\n    }\n    setComments(id, index) {\n        if (this.isCarousel() && index != undefined) {\n            if (this.comments[index] != id) {\n                this.comments[index] = id;\n                this.comments = [...this.comments];\n            }\n\n        } else {\n            let has = this.comments.find(_ => _ == id);\n            if (has) return;\n            this.comments.push(id);\n        }\n\n        // if (index != undefined) {\n        //     this.comments[index] = id;\n        // } else {\n        //     this.comments.push(id);\n        // }\n\n    }\n    getFissionModal(start, end, text) {\n        // let text = this.text || text;\n        let textLength = this.getTextLength();\n        let progress = [];\n        if (start == end) return progress;\n        if (start) {\n            progress.push({\n                sub: [0, start]\n            });\n        } else {\n            start = 0;\n        }\n\n        progress.push({\n            sub: [start, end ? end - start : textLength - start],\n            isRange: true\n        });\n        if (end && end != textLength) {\n            progress.push({\n                sub: [end]\n            });\n        }\n        return progress;\n    }\n    // 分裂器 当进行文本选区的时候自动分裂裁剪成 n 部分 start - 裁剪区 - end\n\n    // start 该unit 文本字符第start开始位置\n    // end 该unit 文本字符第end结束位置\n    fission(start, end) {\n        let text = this.text;\n        if (!this.isText()) return [];\n        // 如果是段落换行 不再执行分裂\n        if (this.isLineFeed()) return [];\n\n        let modal = this.getFissionModal(start, end, text);\n        let group_id = guid();\n        modal = modal.map(_ => {\n            return {\n                ..._,\n                text: text.substr(..._.sub),\n                group_id\n            };\n        });\n        return modal;\n    }\n\n    getTextLength() {\n        if (this.isText()) {\n            return +this.text.length;\n        }\n\n        return 0;\n\n    }\n    getText() {\n        return this.text;\n    }\n\n    getOffsetInLine(offset) {\n        let Line = this.parentNode;\n        let _offset = 0;\n        Line.childNodes.find(Unit => {\n            if (Unit == this) {\n                _offset += offset;\n                return true;\n            }\n            _offset += Unit.getTextLength();\n        });\n        return _offset;\n    }\n\n\n    placeholder() {\n        this.text = Tabs.space;\n\n    }\n\n    typed(type) {\n        this.type = type;\n        return this;\n    }\n\n    appendText(cursor, text) {\n        let {\n            offset\n        } = cursor;\n        let [left, right] = vSplit(this.text, offset);\n        let value = left + text + right;\n        this.text = value;\n        this.onRender();\n        return value;\n    }\n    deleteText(cursor, num = 1) {\n        let {\n            offset\n        } = cursor;\n        let [left, right] = vSplit(this.text, offset);\n        left = left.slice(0, -1 * num);\n        let value = left + right;\n        this.text = value;\n        this.onRender();\n        return value;\n    }\n    // 更新内容 文本变化，或者 图片 形变等\n    updateContent(value) {\n        this.text = value;\n    }\n\n    updateRange() {\n        this.startOffset = 0;\n        this.endOffset = this.text.length;\n\n    }\n\n\n\n\n\n\n\n    compositioning(cursor, text) {\n        let startNode = cursor.range.startNode;\n        let range = getRange();\n        cursor.range.getRange(node => {\n            if (node != startNode.nextSibling && node.is_composition) {\n                // console.log(node.text, '__x__', node.__el__.innerText)\n                let start = computedClientBoundaryByOffset(node.__el__, 0, 'right', range);\n                let end = computedClientBoundaryByOffset(node.__el__, node.getTextLength(), 'right', range);\n\n                let __x__ = end.rect.x - start.rect.x;\n\n                node.L.childNodes.map(node => {\n                    node.__x__ = -__x__;\n                })\n                // 为节点打个标记\n                node.L.removeChild(node);\n\n\n            }\n        }, false)\n        // let clone = cursor.node.cloneNode();\n        // clone.guid = cursor.node.guid;\n        // clone.text = text;\n        // cursor.range.getRange((node, index) => {\n        //     node.L.removeChild(node);\n        //     return node;\n        // }, false);\n        // let startNode = cursor.range.startNode;\n        // if (startNode.nextSibling) {\n\n        //     startNode.L.insertBefore(clone, startNode.nextSibling)\n        // } else {\n        //     startNode.L.appendChild(clone)\n        // }\n        // return clone;\n    }\n    compositioning2(cursor, breaks) {\n        // ------------ \n        let range = new RectRange();\n        breaks.map(_break => {\n            // 判断是否为输入法\n            if (_break.startNode && _break.startNode.is_composition) {\n\n            }\n        })\n    }\n\n    updateCompositionRange(cursor) {\n        if (!cursor || !cursor.range) return;\n        let startNode = cursor.range.startNode;\n        if (!startNode) return;\n        startNode.getNextSameNodeTypeNodes(node => {\n\n            if (!node.is_composition) {\n\n                cursor.range.setEnd({\n                    node,\n                    offset: 0\n                })\n                return 'break';\n            }\n        })\n    }\n\n    composition(cursor) {\n        let {\n            offset\n        } = cursor;\n        let range = new RectRange();\n        let [left, right] = vSplit(this.text, offset);\n        let nodeleft = this.cloneNode();\n        nodeleft.text = left\n        let noderight = this.cloneNode();\n        noderight.text = right;\n        let composition = this.cloneNode();\n        composition.text = '';\n        composition.is_composition = true;\n        this.parentNode.insertBefore(nodeleft, this);\n        this.parentNode.insertBefore(composition, this);\n        this.parentNode.insertBefore(noderight, this);\n        this.parentNode.removeChild(this);\n        range.setStart({\n            node: nodeleft,\n            offset: nodeleft.getTextLength()\n        });\n\n        range.setEnd({\n            node: noderight,\n            offset: 0\n        });\n        cursor.range = range;\n        return composition;\n        // this.parentNode\n    }\n\n    compositionEnd(cursor) {\n        // let text = \n        let removeNodes = [];\n        let cursorNode = null;\n        let offset = 0;\n        let startNode = cursor.range.startNode;\n        let endNode = cursor.range.endNode;\n        if (startNode.L == endNode.L) {\n            offset = startNode.getTextLength() + startNode.nextSibling.getTextLength();\n        }\n        if (startNode.L != endNode.L) {\n            endNode.previousSibling && (offset = endNode.previousSibling.getTextLength())\n\n        }\n\n        cursor.range.getRange((node, index) => {\n            if (!node.is_composition) {\n                if (index == 0 && node.nextSibling) {\n                    node.nextSibling.text = node.text + node.nextSibling.text;\n\n                    removeNodes.push(node);\n                    cursorNode = node.nextSibling;\n                    // this.parentNode.removeChild(node);\n                }\n                if (index != 0 && node.previousSibling) {\n                    node.previousSibling.text = node.previousSibling.text + node.text;\n                    removeNodes.push(node);\n                    cursorNode = node.previousSibling;\n\n                    // this.parentNode.removeChild(node);\n                }\n\n            }\n            node.is_composition = false;\n        });\n        removeNodes.map(node => {\n            node.parentNode.removeChild(node);\n        });\n        removeNodes = [];\n\n        // let nextSibling = this.nextSibling;\n        // let previousSibling = this.previousSibling;\n\n        // let leftText = previousSibling ? previousSibling.text : '';\n        // let rightText = nextSibling ? nextSibling.text : '';\n        // let text = cursor.oldInput;\n        // this.parentNode.removeChild(previousSibling);\n        // this.parentNode.removeChild(nextSibling);\n        // this.text = leftText + text + rightText;\n        // this.is_composition = false;\n        return {\n            node: cursorNode,\n            offset\n        };\n    }\n\n\n\n\n\n\n\n}","import Node from '@/lib/node';\nimport Base from '@/lib/base';\nimport RectRange from '@/lib/rectRange';\nimport {\n    getRange\n} from '@/util/range';\nimport {\n    computedClientBoundaryByOffset\n} from '@/util/computed';\nimport {\n    getTextNode\n} from '@/util/dom';\n// import { guid } from '../util/index';\nexport default class Line extends Node {\n    constructor(options, update) {\n        super(options, update);\n        this.class = 'jf-line';\n        this.nodeType = 'line';\n        this.rectRange = new RectRange();\n        super.init(options, update);\n    }\n\n\n    get nextLine() {\n        if(this.nextSibling) return this.nextSibling;\n        let S = this.parentNode;\n        if(S.nextSibling) {\n            S.nextSibling.firstChild;\n        }else {\n            return null;\n        }\n    }\n\n\n    appendUnits(units) {\n        let lastChild = this.lastChild\n        units.map(unit => {\n            if (unit.isBlank()) return;\n            if (lastChild) {\n                if (lastChild.guid == unit.guid) {\n                    lastChild.text = lastChild.text + unit.text;\n                } else {\n                    this.appendChild(unit);\n                }\n            } else {\n                this.appendChild(unit);\n            }\n        })\n    }\n    startInsertUnits(units) {\n        let firstChild = this.firstChild;\n        let _units_ = [];\n        units.map(unit => {\n            if (unit.isBlank()) return;\n            if (firstChild) {\n                if (firstChild.guid == unit.guid) {\n                    firstChild.text = unit.text + firstChild.text;\n                    firstChild.__offset__ = -unit.text.length;\n                    _units_.push(firstChild);\n                    // firstChild.__x__ = unit.__x__;\n\n                } else {\n                    this.insertBefore(unit, firstChild);\n                    _units_.push(unit);\n                }\n                // firstChild = unit;\n            } else {\n                this.appendChild(unit);\n                _units_.push(unit);\n            }\n        });\n        return _units_;\n\n    }\n\n\n    // 判断是否存在换行\n    isOverflow() {\n        let el = this.__el__;\n        let clientWidth = el.clientWidth;\n        let scrollWidth = el.scrollWidth;\n        return scrollWidth > clientWidth;\n\n    }\n\n    getOverFlowUnits() {\n        let range = getRange();\n        let Units = this.childNodes;\n        let lineRect = this.__el__.getBoundingClientRect();\n        let clientWidth = this.__el__.clientWidth;\n        let overUnits = [];\n        for (let i = Units.length - 1; i >= 0; i--) {\n            let Unit = Units[i];\n            // let textNode = getTextNode(Unit.__el__);\n            let text = Unit.getText();\n            for (let offset = text.length; offset >= 0; offset--) {\n                let {\n                    rect\n                } = computedClientBoundaryByOffset(Unit.__el__, offset, 'right', range);\n                let x = rect.x - lineRect.x;\n                Unit.__offset__ = offset;\n                if (x <= clientWidth) {\n\n                    overUnits.unshift(Unit);\n                    return overUnits;\n                }\n\n            }\n            overUnits.unshift(Unit);\n        }\n        return overUnits;\n    }\n\n    // order = asc/desc\n    getAccordWithContentRect(callback = () => { }, order = 'asc', anchorNodes = null) {\n        class ContentRect extends Base {\n            constructor(options) {\n                super(options);\n                super.init(options);\n            }\n        }\n\n        this.rectRange.reset();\n\n        let range = getRange();\n        let isAsc = order == 'asc';\n        let lineRect = this.__el__.getBoundingClientRect();\n        let clientWidth = this.__el__.clientWidth;\n        let prevContentRect = null;\n        let abountNodes = [];\n        let firstContentRect = null;\n\n        for (let i = isAsc ? 0 : this.childNodes.length - 1;\n            (isAsc ? i < this.childNodes.length : i >= 0);\n            (isAsc ? i++ : i--)) {\n\n\n            let node = this.childNodes[i];\n            let text = node.getText();\n            let textLength = node.getTextLength();\n\n\n\n            // node.__offset__ = \n\n            abountNodes[isAsc ? 'push' : 'unshift'](node);\n\n            if (node.isBlank()) {\n                continue;\n            }\n            if (!node.isText()) {\n                textLength = 1;\n                // offset = 1;\n            }\n\n            for (let offset = isAsc ? 0 : textLength;\n                (isAsc ? offset <= textLength : offset >= 0);\n                (isAsc ? offset++ : offset--)) {\n\n\n                let _dir = isAsc ? 'left' : 'right'\n                if (!node.isText() && !isAsc) {\n                    _dir = 'right'\n                }\n             \n                let _boundary = computedClientBoundaryByOffset((node.__el__), offset + (node.__offset__ || 0), _dir, range);\n\n                let x = _boundary.rect.x - lineRect.x;\n                let elx = x;\n\n                x = node.__x__ ? x + node.__x__ : x;\n\n                let exec = callback({\n                    x: x,\n                    clientWidth,\n                    text,\n                    offset,\n                    node,\n                    elx\n\n                    // __x__\n                });\n                if (!(isAsc ? this.rectRange.startNode : this.rectRange.endNode)) {\n                    if (isAsc) {\n                        this.rectRange.setStart({\n                            node,\n                            offset,\n                            x,\n                            elx\n                        });\n                    } else {\n                        this.rectRange.setEnd({\n                            node,\n                            offset,\n                            x,\n                            elx\n                        });\n                    }\n                }\n\n                if (exec) {\n                  \n                    if (isAsc) {\n                       \n\n                        if (!prevContentRect) {\n                            this.rectRange.setEnd({\n                                node: this.rectRange.startNode,\n                                offset: this.rectRange.startOffset,\n                                x: this.rectRange.startX,\n                                elx: this.rectRange.startElx\n                            })\n                        } else {\n                            let {\n                                node,\n                                offset,\n                                x,\n                                elx\n                            } = prevContentRect;\n                            this.rectRange.setEnd({\n                                node: node || null,\n                                offset: offset || 0,\n                                x: x || 0,\n                                elx: elx || 0\n                            });\n\n                        }\n\n                    } else {\n                        // 未加入endNode\n\n                        this.rectRange.setStart({\n                            node,\n                            offset,\n                            x,\n                            elx\n                        });\n\n\n                    }\n                    let contentRect = new ContentRect({\n                        boundary: _boundary,\n                        nodes: abountNodes,\n                        offset,\n                        x,\n                        elx,\n                        node\n                        // __x__\n\n                    });\n                    contentRect.prev = prevContentRect;\n                    contentRect.first = firstContentRect;\n                    return contentRect;\n                }\n\n                prevContentRect = new ContentRect({\n                    boundary: _boundary,\n                    nodes: [].concat(abountNodes),\n                    offset,\n                    x,\n                    elx,\n                    node\n                });\n                // }\n\n\n                if (!firstContentRect) {\n                    firstContentRect = prevContentRect;\n                }\n            }\n\n        }\n        let contentRect = new ContentRect(prevContentRect || {});\n        contentRect.prev = prevContentRect;\n        contentRect.first = firstContentRect;\n        if (!(isAsc ? this.rectRange.endNode : this.rectRange.startNode)) {\n            let {\n                node,\n                offset,\n                x,\n                elx\n            } = prevContentRect || {};\n            if (isAsc) {\n                this.rectRange.setEnd({\n                    node: node || null,\n                    offset: offset || 0,\n                    x: x || 0,\n                    elx: elx || 0\n                });\n            } else {\n                this.rectRange.setStart({\n                    node: node || null,\n                    offset: offset || 0,\n                    x: x || 0,\n                    elx: elx || 0\n                });\n            }\n        }\n\n\n        return contentRect;\n\n    }\n\n\n\n\n\n\n}","let keyCode = {\n    8: 'Delete',\n    13: 'Enter',\n    39: 'ArrowRight',\n    37: 'ArrowLeft',\n    38: 'ArrowUp',\n    40: 'ArrowDown'\n}\n\nexport default keyCode;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{class:[_vm.unit.isComposition&&_vm.unit.isComposition() ? 'jf-unit--composition' : '', _vm.unit.__virtual__ ? 'jf-unit--virtual' : '']},[_vm._v(_vm._s(_vm.unit.text)),(_vm.unit.isLineFeed&&_vm.unit.isLineFeed())?_c('br'):_vm._e(),_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<style lang=\"less\" scoped>\n.jf-unit--composition {\n  border-bottom: 1px solid rgba(0, 255, 182);\n  // background: rgba(0, 255, 182, 0.2);\n}\n.jf-unit--virtual {\n  color: #F56C6C\n}\n.jf-unit {\n  // outline: 1px solid rgb(118, 228, 197);\n}\n</style>\n<template>\n  <span :class=\"[unit.isComposition&&unit.isComposition() ? 'jf-unit--composition' : '', unit.__virtual__ ? 'jf-unit--virtual' : '']\">{{ unit.text }}<br v-if=\"unit.isLineFeed&&unit.isLineFeed()\" /><slot></slot></span>\n</template>\n<script>\nexport default {\n  props: {\n    unit: {\n      default() {\n        return {};\n      },\n    },\n  },\n  name: \"ui-text\",\n  created() {\n     \n  }\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./text.vue?vue&type=template&id=6e30fd10&scoped=true&\"\nimport script from \"./text.vue?vue&type=script&lang=js&\"\nexport * from \"./text.vue?vue&type=script&lang=js&\"\nimport style0 from \"./text.vue?vue&type=style&index=0&id=6e30fd10&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e30fd10\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"ui-image\"},[(_vm.isSelect)?_c('div',{staticClass:\"ui-image__squarehandleselectionbox\"},[_c('span',{staticClass:\"ui-image__squarehandleselectionbo-handle\"}),_c('span',{staticClass:\"ui-image__squarehandleselectionbo-handle\"}),_c('span',{staticClass:\"ui-image__squarehandleselectionbo-handle\"}),_c('span',{staticClass:\"ui-image__squarehandleselectionbo-handle\"})]):_vm._e(),_c('div',{staticClass:\"ui-image-container\"},[_c('img',{attrs:{\"src\":_vm.unit.url},on:{\"click\":_vm.cursor}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<style lang=\"less\" scoped>\n.ui-image {\n  display: inline-block;\n  position: relative;\n  font-size: 0;\n  cursor: initial;\n  .ui-image__squarehandleselectionbox {\n    border: 1px solid #0096fd;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n\n  .ui-image-container:hover {\n    box-shadow: 0 0 0 2px rgba(48, 98, 242, 40%);\n  }\n}\n</style>\n<template>\n  <span class=\"ui-image\">\n    <div class=\"ui-image__squarehandleselectionbox\" v-if=\"isSelect\">\n      <span class=\"ui-image__squarehandleselectionbo-handle\"></span>\n      <span class=\"ui-image__squarehandleselectionbo-handle\"></span>\n      <span class=\"ui-image__squarehandleselectionbo-handle\"></span>\n      <span class=\"ui-image__squarehandleselectionbo-handle\"></span>\n    </div>\n    <div class=\"ui-image-container\">\n      <img :src=\"unit.url\" @click=\"cursor\" />\n    </div>\n  </span>\n</template>\n<script>\nexport default {\n  props: {\n    unit: {\n      default() {\n        return {};\n      },\n    },\n  },\n  name: \"ui-image\",\n  data() {\n    return {\n      isSelect: false,\n    };\n  },\n  created() {\n    this.load();\n  },\n  watch: {\n    \"unit.url\"() {\n      this.load();\n    },\n  },\n  methods: {\n    load() {\n      this.$nextTick((_) => {\n        let image = new Image();\n        image.src = this.unit.url;\n        image.onload = () => {\n          this.unit.S.breakWord2({ node: this.unit });\n        };\n        image.onerror = () => {\n          this.unit.S.breakWord2({ node: this.unit });\n        };\n      });\n    },\n    cursor() {},\n  },\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./image.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./image.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./image.vue?vue&type=template&id=58acee38&scoped=true&\"\nimport script from \"./image.vue?vue&type=script&lang=js&\"\nexport * from \"./image.vue?vue&type=script&lang=js&\"\nimport style0 from \"./image.vue?vue&type=style&index=0&id=58acee38&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"58acee38\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<style lang=\"less\" scoped>\n</style>\n<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    unit: {\n      default() {\n        return {};\n      },\n    },\n  },\n  name: \"ui-line\",\n  created() {},\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./line.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./line.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./line.vue?vue&type=template&id=d19c1562&scoped=true&\"\nimport script from \"./line.vue?vue&type=script&lang=js&\"\nexport * from \"./line.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d19c1562\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<style lang=\"less\" scoped>\n</style>\n<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    unit: {\n      default() {\n        return {};\n      },\n    },\n  },\n  name: \"ui-section\",\n  created() {},\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./section.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./section.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./section.vue?vue&type=template&id=29c9e11e&scoped=true&\"\nimport script from \"./section.vue?vue&type=script&lang=js&\"\nexport * from \"./section.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29c9e11e\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Text from './text.vue';\nimport Image from './image.vue'\nimport Line from './line.vue';\nimport Section from './section.vue';\n\nlet UIs = {\n    \n}\nexport let register = (Components) => {\n    Components.map(cp => {\n        UIs[cp.name] = cp;\n    })\n   \n}\nregister([Text, Line, Section, Image]);\n\nexport default UIs;\n\n","import Node from '@/lib/node';\nimport Range from './range';\nimport History from '@/lib/history';\nimport Version from '@/lib/version'\nimport Section from './section';\nimport Cursor from './cursor';\nimport Events from '@/lib/events';\nimport Unit from './unit';\nimport Line from './line';\nimport keyCode from '@/lib/keyCode';\nimport UIs from '@/ui/ui.js';\nimport RenderQueue from '../lib/render-queue';\n\n\n/**\n * [{  s: '', lid: 1  }]\n * \n * 段落对象\n * 行对象\n * 节点对象\n * \n * \n * \n * \n */\n\nclass Doc extends Node {\n    // static Components() {\n    //     return \n    // }\n    constructor(config = {}) {\n        super();\n        this.history = new History();\n        this.range = null;\n        this.nodeType = 'doc';\n        this.rect = null;\n\n        // this.sections = [];\n        this.cursor = new Cursor(this);\n        // this.cursor.doc = this;\n\n        this.events = new Events();\n        this.version = new Version();\n        this.__el__ = null;\n\n\n        this.events.on(document, 'mouseup', (e) => {\n            if (this.cursor.composition) {\n                this.cursor.node.parentNode.removeChild(this.cursor.node);\n                this.cursor.empty();\n            }\n            if (this.__el__.contains(e.target)) {\n                let __unit__ = e.target.__unit__;\n                if (__unit__ && __unit__.nodeType != 'unit') {\n\n                    let unit = __unit__.lastChild;\n                    if (unit.nodeType == 'unit') {\n                        let offset = unit.getTextLength();\n                        if (unit.L.isPlaceholder()) {\n                            offset = 0;\n                        }\n                        this.cursor.set(unit.__el__, offset);\n                        // this._console.warn('错误的进行了emptyInput')\n                        this.cursor.emptyInput()\n                    }\n                } else {\n                    this.cursor.place(e);\n                }\n            } else {\n\n                this.cursor.closeComposition();\n                this.cursor.emptyInput();\n                this.cursor.empty();\n            }\n\n        });\n        this.events.on(document, 'scroll', (e) => {\n            this.cursor.update();\n        });\n\n        super.init(config);\n        this.registered(config.Components);\n        this.init(config);\n    }\n\n    nextTick(callback = () => { }) {\n        // RenderQueue.nextTick(callback);\n        setTimeout(callback, 0)\n    }\n\n    registered() {\n\n    }\n    buildSections() {\n        let section1 = new Section({\n\n        })\n        let line1 = new Line({\n\n        });\n        let unit1 = new Unit({\n\n            text: '又是一个安静的晚上，一个人窝在摇椅里乘凉，我承认这样真的很安详，和楼下老爷爷一样'\n        });\n        let unit2 = new Unit({\n\n            text: '听说你还在搞什么原创，搞来搞去好像也就这样，不如花点时间想想，琢磨一下模样'\n        });\n        let unit4 = new Unit({\n            type: 'image',\n            url: 'http://doc2.tongmingmedia.com/uploads/201811/avatar_1566a6c28504c915#_small.jpeg'\n            // text: '1'\n        });\n        let unit5 = new Unit({\n            type: 'image',\n            url: 'https://starorange.xingju.top/static/img/login_logo.3c478d98.png',\n            // text: '2'\n        })\n        let unit3 = new Unit({\n\n            text: '今夜化了美美的妆(我相信是很美美的妆)，'\n        });\n\n\n        let section2 = new Section({\n            class: 'jf-section'\n        })\n        let line2 = new Line({\n\n        });\n        let unit21 = new Unit({\n\n            text: '我摇晃在舞池中央(那种体态可以想象)，'\n        });\n        let unit22 = new Unit({\n\n            text: '我做我的改变\\u00a0又何必纠结，那就拜托别和我碰面'\n        });\n        let unit23 = new Unit({\n\n            text: '如果再看你一眼，是否还会有感觉，当年素面朝天要多纯洁就有多纯洁，不画扮熟的眼线，不用抹匀粉底液'\n        });\n        line1.appendChild(unit1);\n        line1.appendChild(unit2);\n        line1.appendChild(unit4);\n        line1.appendChild(unit3);\n        section1.appendChild(line1);\n        line2.appendChild(unit21);\n        line2.appendChild(unit22);\n        line2.appendChild(unit5);\n        line2.appendChild(unit23);\n\n        section1.appendChild(line2);\n        this.appendChild(section1);\n        // this.appendChild(section1);\n        // return section1;\n\n    }\n\n    init(config) {\n        let {\n            doc\n        } = config;\n        let sections = this.buildSections(doc || []);\n        // let sections \n    }\n\n\n    render({\n        doc,\n        cursor\n    }) {\n        this.__el__ = doc;\n        this.cursor.__el__ = cursor;\n        this.breakWord();\n        this.drawRect();\n        this.bind();\n\n    }\n    drawRect() {\n        this.rect = this.__el__.getBoundingClientRect();\n    }\n    breakWord() {\n        this.childNodes.map(section => {\n            section.breakWord2()\n        });\n        // this.replaceText()\n    }\n    bind() {\n        let cursor = this.cursor.__el__;\n\n        // \n        this.events.on(cursor, 'keydown', (e) => {\n            // return;\n\n            let {\n                composition\n            } = this.cursor;\n            let offset = 0;\n            this._console.info('====正在keycode===')\n            let KeyCodeName = keyCode[e.keyCode];\n            let previousSibling = this.cursor.node.previousSibling;\n            let nextSibling = this.cursor.node.nextSibling;\n            let stopBreakWord = false;\n            let accord = false;\n            if (KeyCodeName == 'Delete') {\n                this.cursor.emptyInput();\n                accord = true;\n                if (composition) {\n                    stopBreakWord = true;\n                }\n                offset = -1;\n                if (!composition) {\n                    if (this.cursor.offset == 0) {\n                        // 判断上一个node是否存在\n                        if (previousSibling) {\n                            // 删除当前的，move到上一个node位置\n                            // 不是文本类型\n                            if(!previousSibling.isText()) {\n                                this.cursor.node.L.removeChild(previousSibling);\n                                offset = 0;\n                            }else {\n                                if (this.cursor.node.isBlank()) {\n                                    this.cursor.node.L.removeChild(this.cursor.node);\n                                }\n                                this.cursor.set(previousSibling.__el__, previousSibling.text.length);\n\n                            }\n                           \n                        } else {\n                            // 不存在move至上一行\n                            let node = this.cursor.node.getPreviousSameNodeTypeNode();\n\n                            if (node) {\n                                // 如果为占位符行 (空行) 则依旧在当前行 不换行\n                                if (node.L.isPlaceholder()) {\n                                    node.D.removeChild(node.S);\n                                    offset = 0;\n                                    this.cursor.offset = 0;\n                                    if (this.cursor.node.L.isBlank()) {\n                                        this.cursor.node.placeholder();\n                                    }\n                                } else {\n                                    if (this.cursor.node.L.isPlaceholder()) {\n                                        this.cursor.node.S.removeChild(this.cursor.node.L)\n                                    }\n                                    this.cursor.set(node.L.lastChild.__el__, node.L.lastChild.getTextLength());\n                                }\n                            } else {\n                                offset = 0;\n                                this.cursor.node.placeholder();\n                            }\n                        }\n                    }\n                    // 不是占位符行(空行)\n                    this.cursor.node.deleteText(this.cursor, Math.abs(offset));\n                    if (this.cursor.node.L.isBlank()) {\n                        this.cursor.node.placeholder()\n                    }\n                }\n\n            } else if (KeyCodeName == 'Enter') {\n                accord = false;\n                stopBreakWord = true;\n                let Line = this.cursor.node.S.insetSection(this.cursor);\n\n                if (!Line.childNodes.length) {\n                    this.cursor.set(Line.nextSibling.childNodes[0].__el__, 0);\n                    return;\n                }\n\n                // this.cursor.node.S.breakWord2(this.cursor);\n\n                // return;\n                this.nextTick(_ => {\n                    this.cursor.reset();\n                    Line.childNodes[0].S.breakWord2({ node: Line.childNodes[0] });\n                    this.nextTick(() => {\n                        this.cursor.set(Line.childNodes[0].__el__, 0);\n                    })\n                })\n\n            } else if (KeyCodeName == 'ArrowLeft' || KeyCodeName == 'ArrowRight') {\n                stopBreakWord = true;\n                accord = true;\n                this.cursor.emptyInput();\n                let _offset = this.cursor.offset;\n                if (KeyCodeName == 'ArrowLeft') {\n\n                    if (_offset > 0) {\n                        offset = -1;\n                    } else {\n                        if (previousSibling) {\n                            this.cursor.set(previousSibling.__el__, previousSibling.text.length - 1);\n                        }\n                    }\n                }\n                if (KeyCodeName == 'ArrowRight') {\n                    if (_offset < this.cursor.node.text.length) {\n                        offset = 1;\n                    } else {\n                        if (nextSibling) {\n                            this.cursor.set(nextSibling.__el__, 1)\n                        }\n                    }\n\n                }\n\n            } else if (KeyCodeName == 'ArrowUp' || KeyCodeName == 'ArrowDown') {\n                stopBreakWord = true;\n                accord = true;\n                if (KeyCodeName == 'ArrowUp') {\n\n                    let Line = this.cursor.node.parentNode;\n                    if (!Line.previousSibling) {\n                        let Section = Line.parentNode;\n                        Line = Section.previousSibling ? Section.previousSibling.lastChild : null;\n                    } else {\n                        Line = Line.previousSibling;\n                    };\n                    this.cursor.setCursorAccordWithCursor(this.cursor, Line);\n                }\n                if (KeyCodeName == 'ArrowDown') {\n                    let Line = this.cursor.node.parentNode;\n\n                    if (!Line.nextSibling) {\n                        let Section = Line.parentNode;\n                        if (Section.nextSibling) {\n                            Line = Section.nextSibling ? Section.nextSibling.firstChild : null;\n                        }\n\n                    } else {\n                        Line = Line.nextSibling;\n                    };\n                    if (Line) {\n                        this.cursor.setCursorAccordWithCursor(this.cursor, Line);\n                    }\n                }\n            }\n\n\n            this.nextTick(_ => {\n\n                if (!accord) return;\n                if (composition != 'update') {\n                    this.cursor.update(offset + this.cursor.offset);\n                }\n                if (!stopBreakWord) {\n                    this.cursor.node.S.breakWord2(this.cursor);\n                }\n\n            })\n        })\n        this.events.on(cursor, 'input', (e) => {\n            let {\n                composition\n            } = this.cursor;\n            this._console.info('====正在input===')\n            let offset = 0;\n            offset = this.cursor.input.length;\n            // let firstCompositionPrev = null;\n            if (!composition) {\n\n                this.cursor.node.appendText(this.cursor, this.cursor.input);\n\n            }\n            // return\n            this.nextTick(_ => {\n                let update_offset = offset + this.cursor.offset;\n                let composition = this.cursor.composition;\n                if (!composition) {\n                    this.cursor.update(update_offset);\n                    let _cursor = this.cursor;\n\n                    // if()\n                    let breakwords = this.cursor.node.S.breakWord2(_cursor);\n                    // this.cursor.node.updateCompositionRange(_cursor);\n                    this._console.info('breaks', breakwords.breaks);\n                    // this.cursor.node.compositioning2(_cursor, breakwords.breaks)\n                    if (breakwords.breaks.length) {\n                        let breakword = breakwords.breaks;\n                        let _break = breakword[0];\n                        let startNode = _break.startNode;\n                        let startOffset = _break.startOffset;\n                        if (startOffset <= this.cursor.offset - 1 && startNode == this.cursor.node) {\n                            this.nextTick(() => {\n                                let offset = composition == 'update' ? this.cursor.node.L.nextSibling.firstChild.getTextLength() : 1;\n                                if (!composition) {\n                                    this.cursor.emptyInput();\n                                    this.cursor.set(this.cursor.node.L.nextSibling.firstChild.__el__, offset)\n                                }\n\n                            })\n\n                        } else {\n                            this.nextTick(() => {\n                                // this.cursor.update(update_offset);\n                            })\n\n\n                        }\n                    }\n                }\n            })\n        });\n\n        let compositionupdate = e => {\n            this.cursor.range.startNode.nextSibling.text = e.data;\n            this.nextTick(_ => {\n                this.cursor.node.compositioning(this.cursor);\n                let breakwords = this.cursor.node.S.breakWord2(this.cursor);\n                this.cursor.node.updateCompositionRange(this.cursor);\n                // this.nextTick(_ => {\n                if (this.cursor.composition == 'end') {\n                    let _cursor = this.cursor.node.compositionEnd(this.cursor);\n                    this.cursor.closeComposition();\n                    this.nextTick(_ => {\n                        if(_cursor.node) {\n                            this.cursor.set(_cursor.node.__el__, _cursor.offset)\n                        }\n                    })\n\n                }\n\n\n                // })\n\n            })\n\n        }\n\n        this.events.on(cursor, 'compositionstart', (e) => {\n            // 防止回流导致的compositionstart事件二次触发\n            if (this.cursor.composition == 'update') return;\n            this.cursor.emptyInput()\n            let composition = this.cursor.node.composition(this.cursor);\n            this.cursor.composition = 'start';\n            this.cursor.node = composition;\n            this.cursor.offset = 0;\n        });\n        this.events.on(cursor, 'compositionupdate', (e) => {\n            this.cursor.composition = 'update';\n            compositionupdate(e);\n\n        });\n        this.events.on(cursor, 'compositionend', (e) => {\n            this.cursor.composition = 'end';\n            // compositionupdate(e) \n\n        })\n\n    }\n\n\n    insertSection() {\n\n    }\n\n\n\n    getNodeByDom(dom) {\n\n\n    }\n\n\n\n\n}\n// Doc.Line(component, )\nDoc.UIs = UIs;\n\nexport default Doc","import Doc from '@/components/doc';\nimport '@/ui/ui.js';\n\n\nexport default Doc;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.cursor.offset > -1),expression:\"cursor.offset > -1\"}],staticClass:\"jf-editor__cursor\",style:(_vm.place)},[_c('input',{ref:\"input\",staticClass:\"jf-editor__cursor--input\",on:{\"input\":_vm.updateInput,\"keydown\":_vm.keyDown}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\n@keyframes cursor {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n.jf-editor__cursor {\n  opacity: 1;\n  position: absolute;\n  background: #f56c6c;\n  animation: cursor 1.3s infinite;\n  animation-fill-mode: forwards;\n  overflow: hidden;\n  .jf-editor__cursor--input {\n    outline: none;\n    border: none;\n    background: none;\n    position: relative;\n    left: 200px;\n    width: 2px;\n    color: transparent;\n  }\n}\n</style>\n<template>\n  <i class=\"jf-editor__cursor\" :style=\"place\" v-show=\"cursor.offset > -1\">\n    <input\n      class=\"jf-editor__cursor--input\"\n      ref=\"input\"\n      @input=\"updateInput\"\n      @keydown=\"keyDown\"\n    />\n  </i>\n</template>\n<script>\n// import { }\n\nexport default {\n  name: \"ui-cursor\",\n  props: {\n    cursor: {\n      default() {\n        return {};\n      },\n    },\n    doc: {},\n  },\n  data() {\n    return {};\n  },\n  watch: {\n    \"cursor.offset\"(v) {\n      if (v > -1) {\n        this.$nextTick(() => {\n          this.$refs[\"input\"].focus();\n        });\n      }\n    },\n  },\n  computed: {\n    place() {\n      let { width, height, left, top, node } = this.cursor;\n      // console.log(node, 'node....', node&&node.is_composition, left, top)\n      if (node && node.is_composition) {\n        return {\n          width: 0,\n          height: 0,\n        };\n      }\n      return {\n        width: width + \"px\",\n        height: height + \"px\",\n        left: left + \"px\",\n        top: top + \"px\",\n      };\n    },\n  },\n  mounted() {\n    this.doc.cursor.__el__ = this.$refs[\"input\"];\n  },\n  methods: {\n    updateInput(e) {\n      let value = e.target.value;\n      this.cursor.updateInput(value);\n    },\n    keyDown(e) {\n      this.cursor.keyCode = e.keyCode;\n    },\n    getInput() {\n      return this.$refs[\"input\"];\n    },\n  },\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cursor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cursor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cursor.vue?vue&type=template&id=4548d4ac&scoped=true&\"\nimport script from \"./cursor.vue?vue&type=script&lang=js&\"\nexport * from \"./cursor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cursor.vue?vue&type=style&index=0&id=4548d4ac&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4548d4ac\",\n  null\n  \n)\n\nexport default component.exports","import UIs from './ui';\n\nexport default {\n    name: 'vessel',\n    props: {\n        type: {\n            default: 'text'\n        },\n        unit: {\n            default () {\n                return {}\n            }\n        }\n    },\n    mounted() {\n        this.$el.__unit__ = this.unit;\n        this.unit.__el__ = this.$el;\n        this.unit.onMount();\n      \n\n    },\n    beforeDestroy() {\n    },\n    render(h) {\n        this.unit.onRender(this.$el);\n        let unit = this.unit;\n        return h(UIs['ui-' + this.type], {\n            attrs: {\n                'data-id': `${unit.guid}`,\n                'data-__virtual__': `${unit.__virtual__}`,\n                'data-is_composition': `${unit.is_composition}`,\n\n            },\n            class: unit.class,\n            props: {\n                type: this.type,\n                unit\n            }\n        }, this.$slots.default)\n\n    }\n\n}","\n<style lang=\"less\" scoped>\n.jf-doc-wrapper {\n  height: 400px;\n  width: 400px;\n  overflow-y: overlay;\n  position: relative;\n  color: #606266;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 8px;\n}\n.jf-doc {\n  font-size: 12px;\n  line-height: 1.5;\n  font-family: Arial, \"Microsoft YaHei\", \"微软雅黑\", \"黑体\", Heiti, sans-serif,\n    SimSun, \"宋体\", serif;\n  color: #333333;\n  background-color: transparent;\n  font-weight: normal;\n  font-style: normal;\n  font-variant: normal;\n  text-decoration: none;\n  vertical-align: baseline;\n  user-select: none;\n  // word-wrap: break-word;\n  // white-space: normal;\n  // word-break: break-all;\n  white-space: nowrap;\n  width: 100%;\n  overflow: hidden;\n  cursor: text;\n}\n</style>\n<template>\n  <div class=\"jf-doc-wrapper\" id=\"jf-doc-wrapper\">\n    <!--  -->\n\n    <div class=\"jf-doc\" id=\"jf-doc\">\n      <div v-show=\"false\">\n        <slot ></slot>\n      </div>\n      \n      <ui-cursor :cursor=\"doc.cursor\" :doc=\"doc\" ref=\"cursor\"></ui-cursor>\n      <Vessel\n        :key=\"section.guid\"\n        v-for=\"section in doc.childNodes\"\n        :class=\"[section.class]\"\n        :unit=\"section\"\n        type=\"section\"\n      >\n        <Vessel\n          :key=\"line.guid\"\n          type=\"line\"\n          :unit=\"line\"\n          v-for=\"line in section.childNodes\"\n        >\n          <Vessel\n            :key=\"unit.guid\"\n            :unit=\"unit\"\n            :type=\"unit.type\"\n            v-for=\"unit in line.childNodes\"\n          ></Vessel>\n        </Vessel>\n      </Vessel>\n    </div>\n  </div>\n</template>\n\n<script>\n// import test from '@/test';\nimport Doc from \"@/index\";\nimport Cursor from \"./cursor.vue\";\nimport Vessel from \"./vessel\";\nexport default {\n  name: \"Index\",\n  UIs: Doc.UIs,\n  data() {\n    return {\n      doc: null,\n    };\n  },\n  components: {\n    Vessel,\n    uiCursor: Cursor,\n  },\n  methods: {\n    // test\n  },\n  created() {\n    let doc = new Doc();\n    this.doc = doc;\n    this.$nextTick(() => {\n      doc.render({ doc: this.$el, cursor: this.$refs[\"cursor\"].getInput() });\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0f27e0dc&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=0f27e0dc&lang=less&scoped=true&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&id=0f27e0dc&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f27e0dc\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div style=\"text-align: center\">demo版本 换行出现问题，尝试刷新解决(移动端未做兼容)</div>\n    <doc style=\"width: 340px;height: 400px;margin: 20px auto;\">\n     \n    </doc>\n  </div>\n</template>\n\n<script>\nimport doc from './ui/index.vue';\nexport default {\n  name: 'App',\n  components: {\n    doc,\n\n    [doc.UIs['ui-section'].name]: doc.UIs['ui-section'],\n    [doc.UIs['ui-text'].name]: doc.UIs['ui-text']\n  }\n}\n</script>\n\n<style>\nhtml, body {\n  height: 100%;\n  -webkit-font-smoothing: antialiased;\n  overflow: hidden;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 30px;\n\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=72ade326&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue';\n\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./image.vue?vue&type=style&index=0&id=58acee38&lang=less&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./text.vue?vue&type=style&index=0&id=6e30fd10&lang=less&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=1&id=0f27e0dc&scoped=true&lang=less&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cursor.vue?vue&type=style&index=0&id=4548d4ac&lang=less&scoped=true&\""],"sourceRoot":""}